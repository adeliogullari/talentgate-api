version: '3.8'

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    healthcheck:
      test: >
        bash -c "pg_isready -q -d ${POSTGRES_DB} -U ${POSTGRES_USER}"
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 10s
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    profiles:
      - dev
      - prod

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    healthcheck:
      test: >
        bash -c "mc ready local"
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 10s
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      #PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    profiles:
      - dev

  minio:
    container_name: minio
    image: minio/minio:latest
    restart: always
    healthcheck:
      test: >
        bash -c "curl -f http://localhost:9000/minio/health/live"
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 10s
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio-data:/data
    command: server /data
    profiles:
      - dev
      - prod

  minio-init:
    container_name: minio-init
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
    entrypoint: >
      /bin/sh -c "
        mc alias set myminio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};

        mc ls myminio/profile || mc mb myminio/profile;
        mc ls myminio/resume || mc mb myminio/resume;
      "
    profiles:
      - dev
      - prod

  traefik:
    container_name: talentgate-api-traefik
    image: traefik:latest
    restart: always
    command:
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
  #  ports:
  #    - "80:80"
  #    - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    profiles:
      - prod

  talentgate-api:
    build: .
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.talentgate-api.rule=Host(`localhost`)"
      - "traefik.http.services.talentgate-api.loadbalancer.server.port=80"
    #ports:
    #  - "80:80"
    profiles:
      - prod

volumes:
  postgres-data:
  pgadmin-data:
  minio-data: